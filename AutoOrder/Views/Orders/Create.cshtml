@model AutoOrder.Models.Order

@{
    ViewBag.Title = "Заявки на автотранспорт | Создание заявки";
    HtmlHelper.ClientValidationEnabled = false;
}

<h2>Создание заявки</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Phone, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TransportedObjectType, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.TransportedObjectType, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.TransportedObjectType, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TransportTypeId, "Тип перевозки", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("TransportTypeId", null, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.TransportTypeId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ObjectLength, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ObjectLength, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ObjectLength, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ObjectWidth, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ObjectWidth, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ObjectWidth, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ObjectHeight, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ObjectHeight, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ObjectHeight, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProspectiveInDate, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProspectiveInDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ProspectiveInDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProspectiveOutDate, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProspectiveOutDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ProspectiveOutDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressFrom, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddressFrom, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.AddressFrom, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressTo, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddressTo, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.AddressTo, "", new {@class = "text-danger"})
            </div>
        </div>       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Создать заявку" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Заявки на автотранспорт", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}